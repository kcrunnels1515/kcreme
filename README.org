#+title: Readme
#+MACRO: action (eval (concat "{" ))
* KCREME
- an abstract syntax tree -> semantics tree, represents the meaning of the language
- parse tree -> syntax tree, represents the structure of the language
- character -> surrounded by graves
** Structure
- nested s-expressions
- REPL
  - an s-expression is lexed, and parsed to a syntax tree
  - annotate the syntax tree
    - check typing, verify that first element of an evaluated s-expr corresponds to a function
- 'expr -> quote on expr
- @(1 2 3) -> vector containing 1 2 3
** Token Types
- integer     -> INT
- decimal     -> FLT
- character   -> CHR
- string      -> STR
- operator    -> OPR
- identifier  -> IDN
** Lexer
INT ::= [+-]? ( [0-9] | [1-9][0-9]* )
FLT ::= [+-]? ( 0 '.' [0-9] [0-9]* | [1-9] [0-9]* '.'  [0-9] [0-9]* )
CHR ::= ['] ([^'\\] | '\' [bnrt'"\] ) [']
STR ::= ["] ([^'\\] | '\' [bnrt'"\] )* ["]
OPR ::= [<>!=] '='? | .
IDN ::= [A-Za-z_] [A-Za-z0-9_-]*

** Parser
1 S' ::= S
2 S ::= sexpr | atom
3 sexpr ::= '(' ')'
4 sexpr ::= '(' list ')'
5 list ::= atom
6 list ::= sexpr
7 list ::= list atom
8 list ::= list sexpr
9 atom ::= INT | CHR | STR | IDN
** Parser Closures
closure(S) => {
        S ::= . sexpr,
        sexpr ::= . ( ),
        sexpr ::= . ( list ),
}

closure(sexpr) => {
        sexpr ::= . ( ),
        sexpr ::= . ( list )
}

closure(list) => {
        list ::= .atom,
        list ::= .sexpr,
        list ::= .list atom,
        list ::= .list sexpr,
        sexpr ::= . ( ),
        sexpr ::= . ( list ),
        atom ::= .INT,
        atom ::= .CHR,
        atom ::= .STR,
        atom ::= .IDN
}

closure(atom) => {
        atom ::= .INT,
        atom ::= .CHR,
        atom ::= .STR,
        atom ::= .IDN
}
** Parser Rules
- (0) $accept -> program $end
- (1) program -> list
- (2) sexpr -> ()
- (3) sexpr -> ( list )
- (4) sexpr -> ( OPR list )
- (5) list -> atom
- (6) list -> sexpr
- (7) list -> list atom
- (8) list -> list sexpr
- (9) list -> QUOTE atom
- (10) list -> QUOTE sexpr
- (11) atom -> INT
- (12) atom -> CHR
- (13) atom -> STR
- (14) atom -> ID
** Parser Terminals
- $end -> 0
- error -> 1
- ID -> 3
- STR -> 4
- CHR -> 5
- INT -> 6
- FLOAT -> 7
- OPR -> 8
- NIL -> 9
- LIST -> 10
- QUOTE -> 12
- VEC -> 11
- SEXPR -> 13
- "(" -> 14
- ")" -> 15
** Parser Non-terminals
- $accept -> 16
- program -> 17
- sexpr -> 18
- list -> 19
- atom -> 20
** Parser States
goto n
*** S0
- rules
  - (0) $accept -> . program $end
  - (1) program -> . list
  - (2) sexpr -> . ()
  - (3) sexpr -> . ( list )
  - (4) sexpr -> . ( OPR list )
  - (5) list -> . atom
  - (6) list -> . sexpr
  - (7) list -> . list atom
  - (8) list -> . list sexpr
  - (9) list -> . QUOTE atom
  - (10) list -> . QUOTE sexpr
  - (11) atom -> . INT
  - (12) atom -> . CHR
  - (13) atom -> . STR
  - (14) atom -> . ID
- transitions
  - ID shift 1
  - STR shift 2
  - CHR shift 3
  - INT shift 3
  - QUOTE shift 5
  - '(' shift 6
  - program goto 7
  - sexpr goto 8
  - list goto 9
  - atom goto 10
*** S1
- rules
  - (14) atom ->  ID .
- reductions
  - reduce 14
*** S2
- rules
  - (13) atom -> STR .
- reductions
  - reduce 13
*** S3
- rules
  - (12) atom -> CHR .
- reductions
  - reduce 12
*** S4
- rules
  - (11) atom -> INT .
- reductions
  - reduce 11
*** S5
- rules
  - (2) sexpr -> . ()
  - (3) sexpr -> . ( list )
  - (4) sexpr -> . ( OPR list )
  - (9) list -> QUOTE . atom
  - (10) list -> QUOTE . sexpr
  - (11) atom -> . INT
  - (12) atom -> . CHR
  - (13) atom -> . STR
  - (14) atom -> . ID
- transitions
  -
*** S6
- rules
  - (10) atom -> CHR.
- reductions
  - reduce 10
*** S7
- rules
  - (9) atom -> INT.
- reductions
  - reduce 9
*** S8
- rules
  - (2) sexpr -> .()
  - (3) sexpr -> .( list )
  - (4) sexpr -> .( OPR list )
  - (4) sexpr -> ( OPR . list )
  - (5) list -> .atom
  - (6) list -> .sexpr
  - (7) list -> .list atom
  - (8) list -> .list sexpr
  - (9) atom -> .INT
  - (10) atom -> .CHR
  - (11) atom -> .STR
  - (12) atom -> .ID
- transitions
  - ID shift 4
  - STR shift 5
  - CHR shift 6
  - INT shift 7
  - '(' shift 1
  - sexpr goto 10
  - list goto 14
  - atom goto 12
*** S9
- rules
  - (2) sexpr -> ().
- reductions
  - reduce 2
*** S10
- rules
  - (6) list -> sexpr.
- reductions
  - reduce 6
*** S11
- rules
  - (2) sexpr -> .()
  - (3) sexpr -> .( list )
  - (3) sexpr -> ( list . )
  - (4) sexpr -> .( OPR list )
  - (7) list -> list . atom
  - (8) list -> list . sexpr
  - (9) atom -> .INT
  - (10) atom -> .CHR
  - (11) atom -> .STR
  - (12) atom -> .ID
- transitions
  - ID shift 4
  - STR shift 5
  - CHR shift 6
  - INT shift 7
  - '(' shift 1
  - ')' shift 15
  - sexpr goto 16
  - atom goto 17
*** S12
- rules
  - (5) list -> atom.
- reductions
  - reduce 5
*** S13
- rules
  - (0) $accept -> program. $end
- reductions
  - reduce 0 (accept)
*** S14
- rules
  - (2) sexpr -> .()
  - (3) sexpr -> .( list )
  - (4) sexpr -> .( OPR list )
  - (4) sexpr -> ( OPR list . )
  - (7) list -> list . atom
  - (8) list -> list . sexpr
  - (9) atom -> .INT
  - (10) atom -> .CHR
  - (11) atom -> .STR
  - (12) atom -> .ID
- transitions
  - ID shift 4
  - STR shift 5
  - CHR shift 6
  - INT shift 7
  - '(' shift 1
  - ')' shift 18
  - sexpr goto 16
  - atom goto 17
*** S15
- rules
  - (3) sexpr -> ( list ).
- reductions
  - reduce 3
*** S16
- rules
  - (8) list -> list sexpr .
- reductions
  - reduce 8
*** S17
- rules
  - (7) list -> list atom .
- reductions
  - reduce 7
*** S18
- rules
  - (4) sexpr -> ( OPR list ) .
- reductions
  - reduce 4
** Parser Action Table
- accept
- shift
- reduce Token
- error

- (0) $accept -> program $end
- (1) program -> list
- (2) sexpr -> ()
- (3) sexpr -> ( list )
- (4) sexpr -> ( OPR list )
- (5) list -> atom
- (6) list -> sexpr
- (7) list -> list atom
- (8) list -> list sexpr
- (9) list -> QUOTE atom
- (10) list -> QUOTE sexpr
- (11) atom -> INT
- (12) atom -> CHR
- (13) atom -> STR
- (14) atom -> FLT
- (15) atom -> ID

note: lookahead of $end for S10




|    | NIL   | SEXPR | ID     | INT    | FLOAT  | OPR    | LIST  | CHAR   | STR    | QUOTE  | (      | )      | program | atom  | end    |
|  0 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {S,6}  | {S,7}  | {E,0}  | {E,0}   | {E,0} | {E,0}  |
|  1 | {E,0} | {E,0} | {R,15} | {R,15} | {R,15} | {R,15} | {E,0} | {R,15} | {R,15} | {R,15} | {R,15} | {R,15} | {E,0}   | {E,0} | {E,0}  |
|  2 | {E,0} | {E,0} | {R,13} | {R,13} | {R,13} | {R,13} | {E,0} | {R,13} | {R,13} | {R,13} | {R,13} | {R,13} | {E,0}   | {E,0} | {E,0}  |
|  3 | {E,0} | {E,0} | {R,12} | {R,12} | {R,12} | {R,12} | {E,0} | {R,12} | {R,12} | {R,12} | {R,12} | {R,12} | {E,0}   | {E,0} | {E,0}  |
|  4 | {E,0} | {E,0} | {R,11} | {R,11} | {R,11} | {R,11} | {E,0} | {R,11} | {R,11} | {R,11} | {R,11} | {R,11} | {E,0}   | {E,0} | {E,0}  |
|  5 | {E,0} | {E,0} | {R,14} | {R,14} | {R,14} | {R,14} | {E,0} | {R,14} | {R,14} | {R,14} | {R,14} | {R,14} | {E,0}   | {E,0} | {E,0}  |
|  6 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {E,0}  | {S,7}  | {E,0}  | {E,0}   | {E,0} | {E,0}  |
|  7 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {S,14} | {E,0} | {S,3}  | {S,2}  | {S,6}  | {S,7}  | {S,15} | {E,0}   | {E,0} | {E,0}  |
|  8 | {E,0} | {E,0} | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0} | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0}   | {E,0} | {S,17} |
|  9 | {E,0} | {E,0} | {R,6}  | {R,6}  | {R,6}  | {R,6}  | {E,0} | {R,6}  | {R,6}  | {R,6}  | {R,6}  | {R,6}  | {E,0}   | {E,0} | {E,0}  |
| 10 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {E,0}  | {S,7}  | {E,0}  | {E,0}   | {E,0} | {R,1}  |
| 11 | {E,0} | {E,0} | {R,5}  | {R,5}  | {R,5}  | {R,5}  | {E,0} | {R,5}  | {R,5}  | {R,5}  | {R,5}  | {R,5}  | {E,0}   | {E,0} | {E,0}  |
| 12 | {E,0} | {E,0} | {R,10} | {R,10} | {R,10} | {R,10} | {E,0} | {R,10} | {R,10} | {R,10} | {R,10} | {R,10} | {E,0}   | {E,0} | {E,0}  |
| 13 | {E,0} | {E,0} | {R,9}  | {R,9}  | {R,9}  | {R,9}  | {E,0} | {R,9}  | {R,9}  | {R,9}  | {R,9}  | {R,9}  | {E,0}   | {E,0} | {E,0}  |
| 14 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {S,6}  | {S,7}  | {E,0}  | {E,0}   | {E,0} | {E,0}  |
| 15 | {E,0} | {E,0} | {R,2}  | {R,2}  | {R,2}  | {R,2}  | {E,0} | {R,2}  | {R,2}  | {R,2}  | {R,2}  | {R,2}  | {E,0}   | {E,0} | {E,0}  |
| 16 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {E,0}  | {S,7}  | {S,21} | {E,0}   | {E,0} | {E,0}  |
| 17 | {E,0} | {E,0} | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0} | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0}  | {E,0}   | {E,0} | {A,0}  |
| 18 | {E,0} | {E,0} | {R,8}  | {R,8}  | {R,8}  | {R,8}  | {E,0} | {R,8}  | {R,8}  | {R,8}  | {R,8}  | {R,8}  | {E,0}   | {E,0} | {E,0}  |
| 19 | {E,0} | {E,0} | {R,7}  | {R,7}  | {R,7}  | {R,7}  | {E,0} | {R,7}  | {R,7}  | {R,7}  | {R,7}  | {R,7}  | {E,0}   | {E,0} | {E,0}  |
| 20 | {E,0} | {E,0} | {S,1}  | {S,4}  | {S,5}  | {E,0}  | {E,0} | {S,3}  | {S,2}  | {E,0}  | {S,7}  | {S,22} | {E,0}   | {E,0} | {E,0}  |
| 21 | {E,0} | {E,0} | {R,3}  | {R,3}  | {R,3}  | {R,3}  | {E,0} | {R,3}  | {R,3}  | {R,3}  | {R,3}  | {R,3}  | {E,0}   | {E,0} | {E,0}  |
| 22 | {E,0} | {E,0} | {R,4}  | {R,4}  | {R,4}  | {R,4}  | {E,0} | {R,4}  | {R,4}  | {R,4}  | {R,4}  | {R,4}  | {E,0}   | {E,0} | {E,0}  |


** Parser GOTO table
|    | NIL | SEXPR | ID | INT | FLOAT | OPR | LIST | CHAR | STR | QUOTE | ( | ) | program | atom | end |
|  0 |     |     9 |    |     |       |     |   10 |      |     |       |   |   |       8 |   11 |     |
|  1 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  2 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  3 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  4 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  5 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  6 |     |    12 |    |     |       |     |      |      |     |       |   |   |         |   13 |     |
|  7 |     |     9 |    |     |       |     |   16 |      |     |       |   |   |         |   11 |     |
|  8 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  9 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 10 |     |    18 |    |     |       |     |      |      |     |       |   |   |         |   19 |     |
| 11 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 12 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 13 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 14 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 15 |     |     9 |    |     |       |     |   20 |      |     |       |   |   |         |   11 |     |
| 16 |     |    18 |    |     |       |     |      |      |     |       |   |   |         |   19 |     |
| 17 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 18 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 19 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 20 |     |    18 |    |     |       |     |      |      |     |       |   |   |         |   19 |     |
| 21 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 22 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
** My Parsing Tables
|    | NIL | SEXPR | ID | INT | FLOAT | OPR | LIST | CHAR | STR | QUOTE | ( | ) | program | atom | end |
|  0 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  1 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  2 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  3 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  4 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  5 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  6 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  7 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  8 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
|  9 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 10 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 11 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 12 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 13 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 14 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 15 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 16 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 17 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 18 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 19 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 20 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 21 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
| 22 |     |       |    |     |       |     |      |      |     |       |   |   |         |      |     |
